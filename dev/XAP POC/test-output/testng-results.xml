<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="2" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="106366" started-at="2018-04-25T17:14:40Z" finished-at="2018-04-25T17:16:27Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="106366" started-at="2018-04-25T17:14:40Z" finished-at="2018-04-25T17:16:27Z">
      <class name="com.xap.login.Loginxap">
        <test-method status="PASS" signature="base()[pri:0, instance:com.xap.login.Loginxap@17d677df]" name="base" is-config="true" duration-ms="66777" started-at="2018-04-25T17:14:42Z" finished-at="2018-04-25T17:15:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- base -->
        <test-method status="FAIL" signature="testmethod(java.lang.String, java.lang.String)[pri:0, instance:com.xap.login.Loginxap@17d677df]" name="testmethod" duration-ms="6953" started-at="2018-04-25T17:15:49Z" data-provider="TestDataProvider" finished-at="2018-04-25T17:15:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Test1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[A196311]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertFalse(Assert.java:65)
at org.testng.Assert.assertFalse(Assert.java:75)
at com.xap.login.Loginxap.testmethod(Loginxap.java:42)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testmethod -->
        <test-method status="PASS" signature="after(org.testng.ITestResult)[pri:0, instance:com.xap.login.Loginxap@17d677df]" name="after" is-config="true" duration-ms="1047" started-at="2018-04-25T17:15:56Z" finished-at="2018-04-25T17:15:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testmethod status=FAILURE method=Loginxap.testmethod(java.lang.String, java.lang.String)[pri:0, instance:com.xap.login.Loginxap@17d677df] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="base()[pri:0, instance:com.xap.login.Loginxap@17d677df]" name="base" is-config="true" duration-ms="23956" started-at="2018-04-25T17:15:57Z" finished-at="2018-04-25T17:16:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- base -->
        <test-method status="FAIL" signature="testmethod(java.lang.String, java.lang.String)[pri:0, instance:com.xap.login.Loginxap@17d677df]" name="testmethod" duration-ms="5782" started-at="2018-04-25T17:16:21Z" data-provider="TestDataProvider" finished-at="2018-04-25T17:16:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[aali2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Blue@123]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertFalse(Assert.java:65)
at org.testng.Assert.assertFalse(Assert.java:75)
at com.xap.login.Loginxap.testmethod(Loginxap.java:42)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testmethod -->
        <test-method status="PASS" signature="after(org.testng.ITestResult)[pri:0, instance:com.xap.login.Loginxap@17d677df]" name="after" is-config="true" duration-ms="531" started-at="2018-04-25T17:16:26Z" finished-at="2018-04-25T17:16:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testmethod status=FAILURE method=Loginxap.testmethod(java.lang.String, java.lang.String)[pri:0, instance:com.xap.login.Loginxap@17d677df] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.xap.login.Loginxap -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
